main:
  name: 'object_detection'
  seed: 24
  cuda: True

data_loader:
  type: 'CustomDataLoader'
  args: # see utils/data_loader.py
    data_dir: 'data/'
    batch_size: 1
    shuffle: True
    validation_split: 0.1
    num_workers: 8

arch:
  type: 'Yolov8n'
  args: {} # see model/model.py
optimizer:
  type: 'Adam'
  args: # see torch.optim
    lr: 5.e-4
lr_scheduler:
  type: 'ExponentialLR'
  args: # see torch.optim.lr_scheduler
    gamma: 0.98

loss:
  type: 'YoloLoss'
  args: {} # see model/losses.py
  test:
    box: 7.5
    cls: 0.5
    dfl: 1.5
    
metrics: # see model/metrics.py
  - 'bbox_iou'

trainer:
  epochs: 100
  log_step: 10  # log data every x step
  save_dir: 'data/runs/'
  save_period: 5  # save model every x epoch
  monitor: 'min val_loss'  # '{min|max} {metrics}'
  early_stop: 10  # stop after x epoch not improving

logger:  # global logger config
  version: 1
  disable_existing_loggers: False
  formatters:
    brief:
      format: '%(message)s'
    precise:
      format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
      datefmt: '%Y-%m-%d %H:%M:%S'
  handlers:
    console:  # configure output logs to console
      class: 'logging.StreamHandler'
      level: 'DEBUG'
      formatter: 'brief'
      stream: 'ext://sys.stdout'
    file:  # write logs to a file
      class: 'logging.handlers.RotatingFileHandler'
      level: 'INFO'
      formatter: 'precise'
      filename: 'info.log'
      maxBytes: 1.e+6
      backupCount: 5
      encoding: 'utf8'
  root:  # new logger object will inherit from this
    level: 'INFO'
    handlers:
      - 'console'
      - 'file'